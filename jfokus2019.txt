Presentation: JIT Compiler 101: Structure and Optimizations in Graal JIT Compiler
Presentation length: Presentation
When you run Java code on a JVM, a JIT (Just-In-Time) compiler works within the JVM. The JIT compiler improves application performance. It compiles Java bytecode into machine code for an architecture which the application runs on. Each JVM implementation has their own JIT Compiler. For example, HotSpot VM has C1, C2 and Graal Compiler. In this session we will start by talking about what a JIT compiler is. Then I will show compiled code using a tool called JITWatch. As one of the JIT compiler's implementations, I will explain Graal JIT compiler, especially about its IR (Intermediate Representation) graph , IR nodes, some optimizations and snippets. The presentation will be useful for those who want to learn about JIT compiler.

Koichi is a leader and a founder of a Japanese JUG, called KanJava. He is enthusiastic about the JVM! He is also a Java Champion. He is a frequent conference speaker. He developed many Java web applications and designed the architectures for many companies. He measured and improved the performance of those applications using his knowledge of various tools, different GC algorithms, and multithreading. He published several books relevant to Java frameworks and wrote some articles for technical magazines in Japan. He loves to attend Java conferences around the world!
