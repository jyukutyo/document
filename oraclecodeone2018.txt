Session ID
IGN4693
Title
Your city has a developer community? No? Let's create!
Abstract
I'm a founder and a leader of KanJava JUG (Java User Group) in Japan. I built the JUG 10 years ago. Now there are more than 800 members, and events always filled up within 2 hours after announcing. Your city may have a developer community. Unfortunately, it may not match your technical interest. Are you waiting for someone who creates such community? You can do that! I could do that! Certainly, it isn't easy to create and continue a developer community. My JUG event had few participants in first three years. I have thought about stopping the community several times before. Now I'm enjoying to organize the community! So in this session I will taik the secrets of operating a developer community.
---
Title: Create Your Own Super-Simple JIT Compiler with JVMCI

Abstract:
JVMCI stands for "JVM Compiler Interface". We can use JVMCI to write a JIT
compiler in Java, an example of which is Graal, which was introduced in
Java 10. In my talk I will share my experiences writing a super-simple JIT
compiler.

JVM passes byte array of hot method to the interface. So we need to
translate that into Java bytecodes. After that we make machine code from
Java bytecodes. Machine code is cpu-specific, so I made machine code only
for Intel 64 bit CPU. There are so many optimization techniques, so I used
only a few techniques.

In this session I will talk about what a JIT compiler is, specification of
JVMCI interfaces, how to write implementations and how to run an
application with you own compiler.

Session Type: Developer Session
---
Session ID:	BOF5314
Session Title:	Bytecode manipulation with Java Agent & ByteBuddy
Session Abstract:	Have you ever manipulated Java bytecode? There are several bytecode engineering libraries, ByteBuddy is one of the easiest. There is an another tool, Java Agent. It is related to the Instrumentation class in java.lang.instrument API. Instrumentation is the addition of bytecode to methods. Since the changes are purely additive, Java Agent does not modify application state or behavior. WIth ByteBuddy and Java Agent, we can add behaviors to existing classes. In this session I will explain what Java Agent and Instrument API are, an introduction of ByteBuddy and an example code that use Java Agent and ByteBuddy to modify behavior. This talk will be useful for those who wanted to start manipulating Java bytecode using ByteBuddy.
Session Type:	Birds of a Feather (BOF)
---
Koichi is a senior software engineer in Japan. He has been developed many web applications with Java for 15 years. 
He is also a leader of a JUG called KanJava in Japan, an author of several books about Java framework and a frequent conference speaker in Japan.
He loves to attend Java conferences around the world!
