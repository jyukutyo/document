Title (limit 80 characters)
書きたいこと）実践的な受け入れテスト: Gauge, Selenide and DbUnit
書いてみた英文）Practical acceptance tests: Gauge, Selenide and DbUnit

Abstract (limit 750 characters)
書きたいこと）
私たちはWebアプリケーションの受け入れテストを自動化しました。各受け入れテストではまずデータベースに初期データを登録します。次にテスト手順に対応したコードを実行して画面を操作します。最後に画面の内容を検証し、期待値のファイルとデータベースの状態を比較して検証します。これらはGauge, Selenide, DbUnitで実現しています。Gaugeはクロスプラットフォームなテスト自動化ツールです。テストケースを自然言語を使ってマークダウン形式で記述することができます。よって、テストケースは実行可能なドキュメントとなります。SelenideはSeleniumのラッパーです。Selenium同様にWebDriverを使って画面を操作することができます。DbUnitはJunitの拡張です。テストを実行する間、データベースの状態を指定した状態にすることができます。このセッションでは、この受け入れテスト自動化の構築において直面した課題やその解決策、自動化によるメリット/デメリットを解説します。

書いてみた英文）
We have automated acceptance tests. Firstly, each acceptance test inserts records to RDBMS. Secondly, it runs code corresponding to procedures to operate th GUI. Lastly, it verifies contents and compares expected records in file and recoreds in table of RDBMS. We achieve automation with Gauge, Selenide and DbUnit. Gauge is a test automation tool.It provides the ability to author test cases in Markdown format and natural language. So that test cases become executable documents. Selenide is a Selenium Wrapper. It operates GUI as Selenium. DbUnit is a JUnit extension. It puts a database into known state between test runs. In this session, I'd like to share the problems and its solutions during our process of automationing and pros/cons of it.

Presentation Summary - For evaluation only, this is an additional description of your proposal to help the reviewers better understand your submission. Text limit 3950 characters.
書きたいこと）
私たちは以前受け入れテストはすべて手動で実行していました。テスト仕様書はExcelにテストケースと必要なデータベースのレコードを記述していました。テスト実行時はExcelにあるテスト用の初期データをOracle SQL Developerにコピーアンドペーストし、マウスをクリックしながら手動でテストしていました。ユニットテストはクラスに対してすべて作成し、コマンド1つで実行できています。そのため、受け入れテストを自動化することも何度も話題に上がりました。実際に1機能を自動化しましたが、メンテナンスされずいつのまにか手動に戻っていました。理由は、Excelの表形式に比べて一覧性が悪くレビューしづらく、あとのメンテナンスがしづらいことでした。そんなとき、Gaugeを見つけました。Gaugeはテストケースの手順をマークダウン形式で書けます。マークダウンであれば一覧性がよくレビューはしやすいです。その手順に対応したJavaのメソッドを実装していきます。そのため汎用的な短いメソッドを作り、コードはメンテナンスしやすいです。こうして私たちはGaugeを使って再びWebアプリケーションの受け入れテストの自動化に取り組み始めました。初期データの登録はDbUnitを使って実行します。画面はSeleniumのWebDriverをラップしたSelenideを使い操作し表示内容を検証します。実行後のレコードの状態もDbUnitを使って期待値のファイルと比較します。これにより、今まで手動で実施していた行程をそのままコードに変換することができました。

書いてみた英文）
We had run all the acceptance tests manually before. We had written test cases and required records of RDBMS in Excel files. When we run tests, we copy and paste records from Excel sheets to RDBMS using Oracle SQL Developer and operate GUI manually. Unit tests are written for all Classes, and they are run only by executing a command. So that automated acceptance test was a subject always up for discussion. We actually automated acceptance test of some functions but we could not maintain and back to the original manual tests. The reason was that test code of acceptance test was both difficult to review and to be under maintenance compared to the Excel files.
And it was just then, I found "Gauge". Gauge provides the ability to author test cases in Markdown format and natural language, and we found it very easy to review the test documents. 
In Gauge, each step is implemented to short Java code. So we can implement method for general use and maintain them. 
We started working on automated acceptance tests in the web application. Inserting initial records is implemented using DbUnit. Operating GUI and verifying contents in HTML is executed by Selenide, the Selenium WebDriver wrapper.We compare the state of record after test and files of expected result by DbUnit. Finally we can translate manual step to test code.
